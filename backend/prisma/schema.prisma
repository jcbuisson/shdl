generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url = env("DATABASE_URL")
}


//////////////        META-DATA FOR ALL ELEMENTS OF ALL BUSINESS MODELS        //////////////

model metadata {
   uid                     String     @unique  // `uid` is unique across models
   created_at              DateTime?
   updated_at              DateTime?
   deleted_at              DateTime?
}

//////////////        BUSINESS MODELS        //////////////

enum Tab {
   users       // users management
   groups      // groups management
   test        // test management
   followup    // students followup
   shdl        // shdl sandbox
   craps       // craps sandbox
}

model user {
   uid                     String     @unique
   email                   String?    @unique(map: "user_sub_unique")
   password                String?
   firstname               String?
   lastname                String?
   pict                    String     @default("/static/img/avatar.svg")

   user_tab_relations      user_tab_relation[]
   user_group_relations    user_group_relation[]
}

model user_tab_relation {
   uid                String     @unique
   user_uid           String
   tab                Tab

   user               user @relation(fields: [user_uid], references: [uid], onDelete: Cascade, onUpdate: NoAction)
   @@unique([user_uid, tab])
}

// 'Enseignants', '1SN24D', '1APP24', 'Binôme X & Y'
model group {
   uid                     String     @unique
   created_at              DateTime   @default(now()) @db.Timestamptz(6)
   updated_at              DateTime   @updatedAt @db.Timestamptz(6)
   deleted_at              DateTime?
   name                    String

   user_group_relations    user_group_relation[]
}

model user_group_relation {
   uid             String     @unique
   user_uid        String
   group_uid       String

   user user @relation(fields: [user_uid], references: [uid], onDelete: Cascade, onUpdate: NoAction)
   group group @relation(fields: [group_uid], references: [uid], onDelete: Cascade, onUpdate: NoAction)
   @@unique([user_uid, group_uid])
}

// groupe 1SN24D, 2024-12-10T14:00 à 2024-12-10T15:45
model group_slot {
   uid                     String     @unique
   group_uid               Int
   label                   String
   color                   String     @default("blue")
   start                   DateTime
   end                     DateTime
}

model shdl_test {
   uid                     String     @unique
   color                   String     @default("blue")
   signature               String     // ex: "a, b, cin, s, cout"
   text                    String     // ex: "set rst 1\ncheck a 0"
}

model user_shdl_test {
   uid                     String     @unique
   user_uid                Int
   shdl_test_uid           Int
   date                    DateTime
   success                 Boolean
}
